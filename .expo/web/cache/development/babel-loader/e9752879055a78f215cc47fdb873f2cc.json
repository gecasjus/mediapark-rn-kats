{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport axios from \"axios\";\nexport var fetchCats = function fetchCats() {\n  var catMap, maxItter, max, value, up;\n  return _regeneratorRuntime.async(function fetchCats$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          catMap = [];\n          maxItter = 100;\n          max = 16;\n          value = 0;\n          up = true;\n\n        case 5:\n          _context.prev = 5;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(\"http://placekitten.com/200/300?image=\" + value).then(function (res) {\n            var cat = _extends({}, {\n              preview: res.config.url,\n              id: uuidv4()\n            });\n\n            catMap.push(cat);\n          }).catch(function (err) {\n            console.log('cannot get images');\n          }));\n\n        case 8:\n          maxItter--;\n\n          if (up == true && value <= max) {\n            value++;\n\n            if (value == max) {\n              up = false;\n            }\n          } else {\n            up = false;\n            value--;\n\n            if (value == 0) {\n              up = true;\n            }\n          }\n\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](5);\n          console.log(_context.t0);\n          throw _context.t0;\n\n        case 16:\n          if (maxItter > 0) {\n            _context.next = 5;\n            break;\n          }\n\n        case 17:\n          return _context.abrupt(\"return\", catMap);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[5, 12]], Promise);\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/api.calls.js"],"names":["axios","fetchCats","catMap","maxItter","max","value","up","get","then","res","cat","preview","config","url","id","uuidv4","push","catch","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,UAAAA,MAFqB,GAEZ,EAFY;AAGnBC,UAAAA,QAHmB,GAGR,GAHQ;AAMnBC,UAAAA,GANmB,GAMb,EANa;AAOnBC,UAAAA,KAPmB,GAOX,CAPW;AAQnBC,UAAAA,EARmB,GAQd,IARc;;AAAA;AAAA;AAAA;AAAA,2CAYjBN,KAAK,CAACO,GAAN,2CAAkDF,KAAlD,EACJG,IADI,CACC,UAAAC,GAAG,EAAI;AACV,gBAAIC,GAAG,GAAG,SAAc,EAAd,EAAkB;AAChBC,cAAAA,OAAO,EAAEF,GAAG,CAACG,MAAJ,CAAWC,GADJ;AAEhBC,cAAAA,EAAE,EAAEC,MAAM;AAFM,aAAlB,CAAV;;AAKAb,YAAAA,MAAM,CAACc,IAAP,CAAYN,GAAZ;AACA,WARE,EASCO,KATD,CASO,UAACC,GAAD,EAAS;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACC,WAXL,CAZiB;;AAAA;AAyBnBjB,UAAAA,QAAQ;;AACR,cAAIG,EAAE,IAAI,IAAN,IAAcD,KAAK,IAAID,GAA3B,EAAgC;AAC/BC,YAAAA,KAAK;;AAEN,gBAAIA,KAAK,IAAID,GAAb,EAAkB;AAChBE,cAAAA,EAAE,GAAG,KAAL;AACD;AACF,WANC,MAMM;AACJA,YAAAA,EAAE,GAAG,KAAL;AACAD,YAAAA,KAAK;;AAEP,gBAAIA,KAAK,IAAI,CAAb,EAAgB;AACdC,cAAAA,EAAE,GAAG,IAAL;AACC;AACF;;AAvCkB;AAAA;;AAAA;AAAA;AAAA;AA0CnBa,UAAAA,OAAO,CAACC,GAAR;AA1CmB;;AAAA;AAAA,cA8ChBjB,QAAQ,GAAG,CA9CK;AAAA;AAAA;AAAA;;AAAA;AAAA,2CA+ChBD,MA/CgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import axios from \"axios\";\n\nexport const fetchCats = async () => {\n\nlet catMap = [];\n  let maxItter = 100;\n\n  //random images\n  let max = 16\n  let value = 0\n  let up = true\n\n  do {\n    try {\n  await axios.get(`http://placekitten.com/200/300?image=${value}`)\n   .then(res => {\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4(),\n              }\n        )\n      catMap.push(cat)\n     })\n        .catch((err) => {\n            console.log('cannot get images')\n            });\n\n      maxItter--\n      if (up == true && value <= max) {\n       value++\n\n      if (value == max) {\n        up = false;\n      }\n    }  else {\n        up = false\n        value--;\n\n      if (value == 0) {\n        up = true;\n        }\n      }\n      \n    } catch (error) {\n      console.log(error)\n      throw error;\n    }\n  }\n  while (maxItter > 0);\n  return catMap\n} "]},"metadata":{},"sourceType":"module"}