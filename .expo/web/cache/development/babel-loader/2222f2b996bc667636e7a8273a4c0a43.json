{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { connect } from 'react-redux';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport KatsItem from \"../kats-item/kats-item.component\";\nimport { requestCats } from \"../../redux/kats/kats.actions\";\nimport { filterCats as _filterCats } from \"../../redux/kats/kats.actions\";\nimport { receiveCats } from \"../../redux/kats/kats.actions\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport Modal from 'react-native-modal';\nimport { getNames } from \"../../hooks/useName\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height: 750,\n    marginTop: 0\n  },\n  spinnerTextStyle: {\n    color: 'black'\n  }\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats,\n      filterCats = _ref.filterCats,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      katFilter = _useState2[0],\n      setKatFilter = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      kats = _useState4[0],\n      setKats = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      _onChangeText = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isModalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var katsImages = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n  var katsCount = useSelector(function (state) {\n    return state.kats.count;\n  });\n  var isLoading = useSelector(function (state) {\n    return state.kats.isUploading;\n  });\n  var dispatch = useDispatch();\n\n  var _getNames = getNames(),\n      names = _getNames.names;\n\n  var getData = function getData() {\n    var catMap, maxItter, max, value, up;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            catMap = [];\n            maxItter = 100;\n            max = 16;\n            value = 0;\n            up = true;\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(\"http://placekitten.com/200/300?image=\" + value).then(function (res) {\n              var cat = _extends({}, {\n                preview: res.config.url,\n                id: uuidv4()\n              });\n\n              catMap.push(cat);\n            }));\n\n          case 8:\n            maxItter--;\n\n            if (up == true && value <= max) {\n              value++;\n\n              if (value == max) {\n                up = false;\n              }\n            } else {\n              up = false;\n              value--;\n\n              if (value == 0) {\n                up = true;\n              }\n            }\n\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n            throw _context.t0;\n\n          case 16:\n            if (maxItter > 0) {\n              _context.next = 5;\n              break;\n            }\n\n          case 17:\n            console.log(names);\n            console.log(catMap);\n            setTimeout(function () {\n              var obj = names.map(function (item, i) {\n                return _extends({}, item, catMap[i]);\n              });\n              dispatch(receiveCats(obj));\n            }, 0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      width: '20%',\n      backgroundColor: 'orange',\n      marginHorizontal: 30,\n      borderRadius: 5,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      marginTop: 20\n    },\n    onPress: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Filter\")), React.createElement(Modal, {\n    isVisible: isModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return filterCats(30);\n    },\n    style: {\n      width: '25%',\n      borderColor: 'white',\n      height: '20%',\n      borderWidth: 1,\n      marginHorizontal: 25,\n      borderRadius: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 0,\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"30\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return filterCats(50);\n    },\n    style: {\n      width: '25%',\n      height: '20%',\n      borderWidth: 1,\n      borderColor: 'white',\n      marginHorizontal: 25,\n      borderRadius: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 0,\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 20\n    }\n  }, \"50\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return filterCats(100);\n    },\n    style: {\n      width: '25%',\n      height: '20%',\n      borderColor: 'white',\n      borderWidth: 1,\n      marginHorizontal: 25,\n      borderRadius: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 0,\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 20\n    }\n  }, \"100\"))), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"type number\",\n    placeholderTextColor: \"white\",\n    style: {\n      height: 40,\n      width: 150,\n      borderColor: 'gray',\n      borderWidth: 1,\n      color: 'white'\n    },\n    onChangeText: function onChangeText(text) {\n      _onChangeText(text);\n\n      filterCats(text);\n    },\n    value: text,\n    defaultValue: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: {\n      width: '30%',\n      height: 32,\n      alignSelf: 'center',\n      backgroundColor: 'orange',\n      marginHorizontal: 30,\n      borderRadius: 5\n    },\n    onPress: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"Close\"))), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 14\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      flex: 1\n    },\n    data: katsImages,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(KatsItem, {\n        key: item.id,\n        item: item,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 41\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function (_uploadCats) {\n      function uploadCats(_x) {\n        return _uploadCats.apply(this, arguments);\n      }\n\n      uploadCats.toString = function () {\n        return _uploadCats.toString();\n      };\n\n      return uploadCats;\n    }(function (catArr) {\n      return dispatch(uploadCats(catArr));\n    }),\n    filterCats: function filterCats(count) {\n      return dispatch(_filterCats(count));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","connect","useSelector","useDispatch","v4","uuidv4","axios","KatsItem","requestCats","filterCats","receiveCats","Spinner","Modal","getNames","styles","StyleSheet","create","container","paddingTop","height","marginTop","spinnerTextStyle","color","KatsOverview","uploadCats","navigation","katFilter","setKatFilter","kats","setKats","undefined","text","onChangeText","isModalVisible","setModalVisible","katsImages","state","katsList","katsCount","count","isLoading","isUploading","dispatch","names","getData","catMap","maxItter","max","value","up","get","then","res","cat","preview","config","url","id","push","console","log","setTimeout","obj","map","item","i","toggleModal","flex","width","backgroundColor","marginHorizontal","borderRadius","justifyContent","alignSelf","padding","flexDirection","alignItems","borderColor","borderWidth","fontSize","marginBottom","mapDispatchToProps","catArr"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { \n  Button, \n  View, \n  StyleSheet, \n  Text, \n  FlatList, \n  TouchableOpacity, \n  TextInput \n} from 'react-native';\n\nimport { connect } from 'react-redux';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport 'react-native-get-random-values'\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\n\nimport KatsItem from '../kats-item/kats-item.component'\n\nimport {requestCats} from '../../redux/kats/kats.actions';\nimport { filterCats } from '../../redux/kats/kats.actions'\nimport {receiveCats} from '../../redux/kats/kats.actions'\n\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport Modal from 'react-native-modal';\n\nimport {getNames} from '../../hooks/useName';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height:750,\n    marginTop: 0\n  }, spinnerTextStyle: {\n    color: 'black'\n  }\n});\n\nfunction KatsOverview({uploadCats, filterCats, navigation}) {\n\n\n  const [katFilter, setKatFilter] = useState([])\n  const [kats, setKats] = useState([])\n\n  const [text, onChangeText] = useState(undefined);\n\n  const [isModalVisible, setModalVisible] = useState(false);\n\n\n  const katsImages = useSelector(state => state.kats.katsList)\n  const katsCount = useSelector(state => state.kats.count)\n  const isLoading = useSelector(state => state.kats.isUploading)\n\n  const dispatch = useDispatch();\n\n  const {names} = getNames()\n\n\n  // useEffect(() => {\n  //   let result = [...katsImages];\n\n  //     if (katsCount) {\n  //     result = result.slice(0, katsCount)\n  //     }\n  //     setKatFilter(result);\n\n  // }, [katsImages, katsCount])\n\n\nconst getData = async () => {\n    let catMap = [];\n  let maxItter = 100;\n\n  //random images\n  let max = 16\n  let value = 0\n  let up = true\n\n  do {\n    try {\n  await axios.get(`http://placekitten.com/200/300?image=${value}`)\n   .then(res => {\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4(),\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n      if (up == true && value <= max) {\n       value++\n\n      if (value == max) {\n        up = false;\n      }\n    }  else {\n        up = false\n        value--;\n\n      if (value == 0) {\n        up = true;\n        }\n      }\n      \n    } catch (error) {\n      console.log(error)\n      throw error;\n    }\n  }\n  while (maxItter > 0);\n  console.log(names)\n  console.log(catMap)\n  setTimeout(() => {\n    const obj = names.map((item, i) => Object.assign({}, item, catMap[i]));\n    dispatch(receiveCats(obj))\n  }, 0);\n}\n\n\nuseEffect(() => {\n  getData()\n}, [])\n\nconst toggleModal = () => {\n    setModalVisible(!isModalVisible);\n  };\n\n\n\treturn (\n\t\t<View style={{flex:1}}>\n        <TouchableOpacity \n          style={{width:'20%', backgroundColor:'orange', marginHorizontal:30, borderRadius: 5, justifyContent: 'center', alignSelf:'center', marginTop: 20}}\n          onPress={toggleModal}>\n          <Text style={{color:'white', alignSelf:'center', padding:5}}>Filter</Text>\n        </TouchableOpacity>\n\n        <Modal isVisible={isModalVisible}>\n          <View style={{flex:1, flexDirection:'row', justifyContent: 'center', alignItems: 'center', marginTop:100}}>     \n               <TouchableOpacity\n                    onPress={() => filterCats(30)}\n                    style={{width:'25%', borderColor:'white', height: '20%', borderWidth:1, marginHorizontal:25, borderRadius: 12,}}\n                  >\n                    <Text style={{color:'white', alignSelf:'center', padding:0, fontSize: 30,}}>30</Text>\n                </TouchableOpacity>\n                  <TouchableOpacity\n                  onPress={() => filterCats(50)}\n                   style={{width:'25%', height: '20%', borderWidth:1, borderColor:'white', marginHorizontal:25, borderRadius: 12,}}\n                    >\n                   <Text style={{color:'white', alignSelf:'center', padding:0, fontSize: 30,}}>50</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={() => filterCats(100)}\n                   style={{width:'25%', height: '20%', borderColor:'white', borderWidth:1, marginHorizontal:25, borderRadius: 12,}}\n                    >\n                   <Text style={{color:'white', alignSelf:'center', padding:0, fontSize: 30,}}>100</Text>\n                  </TouchableOpacity>\n                  </View>\n                  <View style={{flex: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginBottom:150,\n                  }}>\n                  <View style={{flex: 1,}}>\n                    <TextInput\n                      placeholder='type number'\n                      placeholderTextColor=\"white\"\n                      style={{height: 40, width:150, borderColor: 'gray', borderWidth: 1, color: 'white'}}\n                      onChangeText={(text) => {\n                        onChangeText(text);\n                        filterCats(text)\n                      }}\n                      value={text}\n                      defaultValue={text}\n                    />\n                  </View>\n                    </View>\n                  <TouchableOpacity \n                  style={{width:'30%', height: 32, alignSelf:'center', backgroundColor:'orange', marginHorizontal:30, borderRadius: 5,}}\n                  onPress={toggleModal}>\n                    <Text style={{color:'white', alignSelf:'center', padding:7}}>Close</Text>\n                  </TouchableOpacity>\n          </Modal>\n             <View style={styles.container}>\n              <FlatList\n                style={{flex:1}}\n                data={katsImages}\n                renderItem={({item}) => <KatsItem key={item.id} item={item} navigation={navigation}/>}\n                keyExtractor={item => item.id}\n              />\n          \t</View>\n      </View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr)),\n  filterCats: (count) => dispatch(filterCats(count))\n})\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);\n"]},"metadata":{},"sourceType":"module"}