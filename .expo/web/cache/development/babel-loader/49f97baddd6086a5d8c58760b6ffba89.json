{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { loadingCats } from \"../redux/kats/kats.actions\";\nexport var useName = function useName(kats) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      names = _useState2[0],\n      setNames = _useState2[1];\n\n  var dispatch = useDispatch();\n  var CancelToken = axios.CancelToken;\n  var source = CancelToken.source();\n\n  var getNames = function getNames() {\n    var arr;\n    return _regeneratorRuntime.async(function getNames$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            arr = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100', {\n              cancelToken: source.token\n            }).then(function (res) {\n              var manufacturerNames = Object.values(res.data).map(function (res) {\n                return res.map(function (manufacturer) {\n                  return manufacturer.name;\n                });\n              });\n              var unnestedNames = manufacturerNames.flat();\n\n              var spread = _toConsumableArray(unnestedNames);\n\n              spread.map(function (item) {\n                kats.push({\n                  cat: item\n                });\n              });\n            }).catch(function (err) {\n              console.log('limited api requests(5 a day)');\n              console.log(err);\n            }));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 9:\n            setNames(arr);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  };\n\n  useEffect(function () {\n    dispatch(loadingCats());\n    getNames();\n    return function () {\n      source.cancel();\n    };\n  }, []);\n  return {\n    names: names\n  };\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/hooks/useName.js"],"names":["useEffect","useState","useDispatch","axios","loadingCats","useName","kats","names","setNames","dispatch","CancelToken","source","getNames","arr","get","cancelToken","token","then","res","manufacturerNames","Object","values","data","map","manufacturer","name","unnestedNames","flat","spread","item","push","cat","catch","err","console","log","cancel"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAAA,kBAENL,QAAQ,CAAC,EAAD,CAFF;AAAA;AAAA,MAEzBM,KAFyB;AAAA,MAElBC,QAFkB;;AAG9B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,MAAMQ,WAAW,GAAGP,KAAK,CAACO,WAA1B;AACA,MAAMC,MAAM,GAAGD,WAAW,CAACC,MAAZ,EAAf;;AAEF,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,YAAAA,GAFY,GAEN,EAFM;AAAA;AAAA;AAAA,6CAKTV,KAAK,CAACW,GAAN,CAAU,gEAAV,EAA4E;AAC/EC,cAAAA,WAAW,EAAEJ,MAAM,CAACK;AAD2D,aAA5E,EAGLC,IAHK,CAGA,UAAAC,GAAG,EAAI;AACZ,kBAAIC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAlB,EACpBC,GADoB,CAChB,UAAAL,GAAG;AAAA,uBAAIA,GAAG,CACbK,GADU,CACN,UAAAC,YAAY;AAAA,yBAAIA,YAAY,CAACC,IAAjB;AAAA,iBADN,CAAJ;AAAA,eADa,CAAxB;AAGC,kBAAIC,aAAa,GAAGP,iBAAiB,CAACQ,IAAlB,EAApB;;AACA,kBAAIC,MAAM,sBAAOF,aAAP,CAAV;;AACAE,cAAAA,MAAM,CAACL,GAAP,CAAW,UAAAM,IAAI,EAAI;AAClBvB,gBAAAA,IAAI,CAACwB,IAAL,CAAU;AAACC,kBAAAA,GAAG,EAAEF;AAAN,iBAAV;AACA,eAFD;AAGA,aAZI,EAaJG,KAbI,CAaE,UAACC,GAAD,EAAS;AACjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAhBM,CALS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAyBhBzB,YAAAA,QAAQ,CAACK,GAAD,CAAR;;AAzBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AA4BAb,EAAAA,SAAS,CAAC,YAAM;AACfS,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACAQ,IAAAA,QAAQ;AACP,WAAO,YAAM;AACRD,MAAAA,MAAM,CAACyB,MAAP;AACH,KAFF;AAGD,GANQ,EAMN,EANM,CAAT;AAOA,SAAO;AAAC7B,IAAAA,KAAK,EAALA;AAAD,GAAP;AACA,CA5CM","sourcesContent":["import {useEffect, useState} from 'react';\nimport { useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n \nimport {loadingCats} from '../redux/kats/kats.actions'\n\nexport const useName = (kats) => {\n\n\tconst [names, setNames] = useState([])\n  \tconst dispatch = useDispatch();\n\n  \tconst CancelToken = axios.CancelToken;\n  \tconst source = CancelToken.source();\n\n\tconst getNames = async () => {\n\n\t\tlet arr = []\n\n\t\ttry {\n\t\t\tawait axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100', {\n\t\t    cancelToken: source.token\n\t\t  \t})\n\t\t\t.then(res => {\n\t\t\t\tlet manufacturerNames = Object.values(res.data)\n\t\t\t\t\t\t\t.map(res => res\n\t\t\t\t\t\t\t\t.map(manufacturer => manufacturer.name))\n\t\t\t\t\tlet unnestedNames = manufacturerNames.flat()\n\t\t\t\t\tlet spread = [...unnestedNames]\n\t\t\t\t\tspread.map(item => {\n\t\t\t\t\t\tkats.push({cat: item})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\tconsole.log('limited api requests(5 a day)')\n\t\t\tconsole.log(err)\n\t\t})\n\t\t} catch (error) {\n\t\t\tthrow error\n\t\t}\n\t\tsetNames(arr)\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(loadingCats());\n\t\tgetNames();\n\t\t\treturn () => {\n\t      \tsource.cancel();\n    };\n\t}, [])\n\treturn {names}\n}\n"]},"metadata":{},"sourceType":"module"}