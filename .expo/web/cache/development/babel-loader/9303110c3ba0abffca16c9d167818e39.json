{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectKatsList } from \"../../redux/kats/kats.selectors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { uploadCats as _uploadCats } from \"../../redux/kats/kats.actions\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height: 600\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats,\n      katImages = _ref.katImages;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      kat = _useState2[0],\n      setKat = _useState2[1];\n\n  useEffect(function () {\n    getCats();\n  }, []);\n\n  var getCats = function getCats() {\n    var catMap = [];\n    var maxItter = 20;\n\n    do {\n      try {\n        axios.get('http://placekitten.com/200/300', {\n          responseType: 'blob'\n        }).then(function (res) {\n          var cat = _extends({}, {\n            preview: res.config.url,\n            id: uuidv4()\n          });\n\n          catMap.push(cat);\n        });\n        maxItter--;\n      } catch (error) {\n        console.log(error);\n      }\n    } while (maxItter > 0);\n\n    uploadCats(catMap);\n  };\n\n  var img = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, console.log(img), katImages.map(function (img) {\n    return React.createElement(Image, {\n      key: img.id,\n      source: {\n        width: 100,\n        height: 100,\n        uri: img.preview\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    });\n  }));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function uploadCats(catArr) {\n      return dispatch(_uploadCats(catArr));\n    }\n  };\n};\n\nvar mapStateToProps = createStructuredSelector({\n  katImages: selectKatsList\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","connect","createStructuredSelector","selectKatsList","v4","uuidv4","axios","useSelector","uploadCats","styles","StyleSheet","create","container","paddingTop","height","tinyLogo","width","logo","KatsOverview","katImages","kat","setKat","getCats","catMap","maxItter","get","responseType","then","res","cat","preview","config","url","id","push","error","console","log","img","state","kats","katsList","map","uri","mapDispatchToProps","dispatch","catArr","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectKatsList } from '../../redux/kats/kats.selectors'\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport axios from \"axios\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { StyleSheet, Text, View, Image } from 'react-native';\n\nimport {uploadCats} from '../../redux/kats/kats.actions';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height:600,\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n});\n\n\nfunction KatsOverview({uploadCats, katImages}) {\n\n  const [kat, setKat] = useState([])\n\n  useEffect(() => {\n  getCats();\n\n}, [])\n\n  const getCats = () => {\n\n  let catMap = [];\n  let maxItter = 20;\n\n  do {\n    try {\n\n  axios.get('http://placekitten.com/200/300', {\n    responseType: 'blob'\n  })\n   .then(res => {\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4()\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  while (maxItter > 0);\n  uploadCats(catMap);\n}\n\nconst img = useSelector(state => state.kats.katsList)\n\n\treturn (\n\t\t<View style={styles.container}>\n    {console.log(img)}\n{\n  katImages.map(img => (\n       <Image\n          key={img.id}\n          source={{\n            width: 100,\n            height: 100,\n            uri: img.preview}}\n          /> \n          ))\n}\n    \t</View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr))\n})\n\nconst mapStateToProps = createStructuredSelector({\n  katImages: selectKatsList,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KatsOverview);"]},"metadata":{},"sourceType":"module"}