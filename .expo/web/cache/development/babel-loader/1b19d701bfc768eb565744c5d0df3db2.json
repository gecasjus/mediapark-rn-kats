{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { loadingCats } from \"../redux/kats/kats.actions\";\nexport var useName = function useName(kats) {\n  var dispatch = useDispatch();\n  var isLoading = useSelector(function (state) {\n    return state.kats.isUploading;\n  });\n\n  var getNames = function getNames() {\n    return _regeneratorRuntime.async(function getNames$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100').then(function (res) {\n              var catnames = Object.values(res.data).map(function (res) {\n                return res.map(function (kitty) {\n                  return kitty.name;\n                });\n              });\n              var unnestedNames = catnames.flat();\n\n              var spread = _toConsumableArray(unnestedNames);\n\n              spread.map(function (item) {\n                kats.push({\n                  cat: item\n                });\n              });\n            }).catch(function (err) {\n              console.log('limited api requests(5 a day)');\n              console.log(err);\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  useEffect(function () {\n    getNames();\n\n    if (isLoading === false) {\n      dispatch(loadingCats());\n    }\n  }, []);\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/hooks/useName.js"],"names":["useEffect","useDispatch","useSelector","axios","loadingCats","useName","kats","dispatch","isLoading","state","isUploading","getNames","get","then","res","catnames","Object","values","data","map","kitty","name","unnestedNames","flat","spread","item","push","cat","catch","err","console","log"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAE9B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,SAAS,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACH,IAAN,CAAWI,WAAf;AAAA,GAAN,CAA7B;;AAEF,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGTR,KAAK,CAACS,GAAN,CAAU,gEAAV,EACLC,IADK,CACA,UAAAC,GAAG,EAAI;AACZ,kBAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAlB,EACXC,GADW,CACP,UAAAL,GAAG;AAAA,uBAAIA,GAAG,CACbK,GADU,CACN,UAAAC,KAAK;AAAA,yBAAIA,KAAK,CAACC,IAAV;AAAA,iBADC,CAAJ;AAAA,eADI,CAAf;AAGC,kBAAIC,aAAa,GAAGP,QAAQ,CAACQ,IAAT,EAApB;;AACA,kBAAIC,MAAM,sBAAOF,aAAP,CAAV;;AACAE,cAAAA,MAAM,CAACL,GAAP,CAAW,UAAAM,IAAI,EAAI;AAClBnB,gBAAAA,IAAI,CAACoB,IAAL,CAAU;AAACC,kBAAAA,GAAG,EAAEF;AAAN,iBAAV;AACA,eAFD;AAGA,aAVI,EAWJG,KAXI,CAWE,UAACC,GAAD,EAAS;AACjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAdM,CAHS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAuBA7B,EAAAA,SAAS,CAAC,YAAM;AACfW,IAAAA,QAAQ;;AACR,QAAGH,SAAS,KAAK,KAAjB,EAAwB;AACxBD,MAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACC;AACD,GALQ,EAKN,EALM,CAAT;AAMA,CAlCM","sourcesContent":["import {useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n \nimport {loadingCats} from '../redux/kats/kats.actions'\n\nexport const useName = (kats) => {\n\n  \tconst dispatch = useDispatch();\n  \tconst isLoading = useSelector(state => state.kats.isUploading)\n\n\tconst getNames = async () => {\n\n\t\ttry {\n\t\t\tawait axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100')\n\t\t\t.then(res => {\n\t\t\t\tlet catnames = Object.values(res.data)\n\t\t\t\t\t\t\t.map(res => res\n\t\t\t\t\t\t\t\t.map(kitty => kitty.name))\n\t\t\t\t\tlet unnestedNames = catnames.flat()\n\t\t\t\t\tlet spread = [...unnestedNames]\n\t\t\t\t\tspread.map(item => {\n\t\t\t\t\t\tkats.push({cat: item})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\tconsole.log('limited api requests(5 a day)')\n\t\t\tconsole.log(err)\n\t\t})\n\t\t} catch (error) {\n\t\t\tthrow error\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tgetNames();\n\t\tif(isLoading === false) {\n\t\tdispatch(loadingCats());\n\t\t}\n\t}, [])\n}\n"]},"metadata":{},"sourceType":"module"}