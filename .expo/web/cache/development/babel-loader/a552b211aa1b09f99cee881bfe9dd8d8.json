{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nexport var useName = function useName() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      names = _useState2[0],\n      setName = _useState2[1];\n\n  var getNames = function getNames() {\n    return _regeneratorRuntime.async(function getNames$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('https://api.fungenerators.com/name/generate?category=car&limit=10').then(function (res) {\n              var katNames = res.data.contents.names;\n              setName(katNames);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getNames();\n  }, []);\n  return {\n    names: names\n  };\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/hooks/useName.jsx"],"names":["useState","useEffect","axios","useName","names","setName","getNames","get","then","res","katNames","data","contents"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBAGHH,QAAQ,CAAC,EAAD,CAHL;AAAA;AAAA,MAGrBI,KAHqB;AAAA,MAGdC,OAHc;;AAK5B,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACVJ,KAAK,CAACK,GAAN,CAAU,mEAAV,EACJC,IADI,CACC,UAAAC,GAAG,EAAI;AACZ,kBAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,QAAT,CAAkBR,KAAnC;AACAC,cAAAA,OAAO,CAACK,QAAD,CAAP;AACD,aAJK,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQAT,EAAAA,SAAS,CAAC,YAAM;AACfK,IAAAA,QAAQ;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO;AAACF,IAAAA,KAAK,EAALA;AAAD,GAAP;AACA,CAjBM","sourcesContent":["import {useState, useEffect} from 'react';\n\nimport axios from \"axios\";\n\nexport const useName = () => {\n\n\n\tconst [names, setName] = useState([])\n\n\tconst getNames = async () => {\n\t\tawait axios.get('https://api.fungenerators.com/name/generate?category=car&limit=10')\n\t\t\t.then(res => {\n\t\t\t\tconst katNames = res.data.contents.names\n\t\t\t\tsetName(katNames)\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tgetNames();\n\t}, [])\n\treturn {names}\n}"]},"metadata":{},"sourceType":"module"}