{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nexport var getNames = function getNames() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      names = _useState2[0],\n      setNames = _useState2[1];\n\n  var receiveNames = function receiveNames() {\n    var arr;\n    return _regeneratorRuntime.async(function receiveNames$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            arr = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100').then(function (res) {\n              var catnames = Object.values(res.data).map(function (res) {\n                return res.map(function (kitty) {\n                  return kitty.name;\n                });\n              });\n              var unnestedNames = catnames.flat();\n\n              var spread = _toConsumableArray(unnestedNames);\n\n              spread.map(function (item) {\n                arr.push({\n                  cat: item\n                });\n                setNames(arr);\n              });\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  };\n\n  useEffect(function () {\n    receiveNames();\n  }, []);\n  return {\n    names: names\n  };\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/hooks/useName.js"],"names":["useEffect","useState","axios","getNames","names","setNames","receiveNames","arr","get","then","res","catnames","Object","values","data","map","kitty","name","unnestedNames","flat","spread","item","push","cat","catch","err","console","log"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBAEHF,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,MAEtBG,KAFsB;AAAA,MAEfC,QAFe;;AAI7B,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,GAFe,GAET,EAFS;AAAA;AAAA;AAAA,6CAIbL,KAAK,CAACM,GAAN,CAAU,gEAAV,EACLC,IADK,CACA,UAAAC,GAAG,EAAI;AACZ,kBAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAlB,EACXC,GADW,CACP,UAAAL,GAAG;AAAA,uBAAIA,GAAG,CACbK,GADU,CACN,UAAAC,KAAK;AAAA,yBAAIA,KAAK,CAACC,IAAV;AAAA,iBADC,CAAJ;AAAA,eADI,CAAf;AAGC,kBAAIC,aAAa,GAAGP,QAAQ,CAACQ,IAAT,EAApB;;AACA,kBAAIC,MAAM,sBAAOF,aAAP,CAAV;;AACAE,cAAAA,MAAM,CAACL,GAAP,CAAW,UAAAM,IAAI,EAAI;AAClBd,gBAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,kBAAAA,GAAG,EAAEF;AAAN,iBAAT;AACAhB,gBAAAA,QAAQ,CAACE,GAAD,CAAR;AACA,eAHD;AAIA,aAXI,EAYJiB,KAZI,CAYE,UAACC,GAAD,EAAS;AACjBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAdM,CAJa;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AA0BAzB,EAAAA,SAAS,CAAC,YAAM;AACfM,IAAAA,YAAY;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO;AAACF,IAAAA,KAAK,EAALA;AAAD,GAAP;AACA,CAlCM","sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from \"axios\";\n\nexport const getNames = () => {\n\n\tconst [names, setNames] = useState([])\n\n\tconst receiveNames = async () => {\n\t\n\tconst arr = []\n\t\ttry {\n\t\t\tawait axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100')\n\t\t\t.then(res => {\n\t\t\t\tlet catnames = Object.values(res.data)\n\t\t\t\t\t\t\t.map(res => res\n\t\t\t\t\t\t\t\t.map(kitty => kitty.name))\n\t\t\t\t\tlet unnestedNames = catnames.flat()\n\t\t\t\t\tlet spread = [...unnestedNames]\n\t\t\t\t\tspread.map(item => {\n\t\t\t\t\t\tarr.push({cat: item})\n\t\t\t\t\t\tsetNames(arr)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\tconsole.log(err)\n\t\t})\n\t\t} catch (error) {\n\t\t\tthrow error\n\t\t}\n\t}\n\n\n\n\tuseEffect(() => {\n\t\treceiveNames();\n\t}, [])\n\treturn {names}\n}\t"]},"metadata":{},"sourceType":"module"}