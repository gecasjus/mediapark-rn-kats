{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectKatsList } from \"../../redux/kats/kats.selectors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { uploadCats as _uploadCats } from \"../../redux/kats/kats.actions\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height: 600\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats,\n      katImages = _ref.katImages;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      kat = _useState2[0],\n      setKat = _useState2[1];\n\n  useEffect(function () {\n    getCats();\n  }, []);\n\n  var getCats = function getCats() {\n    var catMap, maxItter, max, value, up;\n    return _regeneratorRuntime.async(function getCats$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            catMap = [];\n            maxItter = 20;\n            max = 16;\n            value = 0;\n            up = true;\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(\"http://placekitten.com/200/300?image=\" + value, {\n              responseType: 'blob'\n            }).then(function (res) {\n              var cat = _extends({}, {\n                preview: res.config.url,\n                id: uuidv4()\n              });\n\n              catMap.push(cat);\n            }));\n\n          case 8:\n            maxItter--;\n\n            if (up == true && value <= max) {\n              value++;\n\n              if (value == max) {\n                up = false;\n              }\n            } else {\n              up = false;\n              value--;\n\n              if (value == 0) {\n                up = true;\n              }\n            }\n\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n\n          case 15:\n            if (maxItter > 0) {\n              _context.next = 5;\n              break;\n            }\n\n          case 16:\n            setTimeout(function () {\n              console.log('aa');\n            }, 2000);\n            uploadCats(catMap);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  var katsImg = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, katsImg.map(function (_ref2) {\n    var id = _ref2.id,\n        preview = _ref2.preview;\n    return React.createElement(Image, {\n      key: id,\n      source: {\n        width: 100,\n        height: 100,\n        uri: preview\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function uploadCats(catArr) {\n      return dispatch(_uploadCats(catArr));\n    }\n  };\n};\n\nvar mapStateToProps = createStructuredSelector({\n  katImages: selectKatsList\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","connect","createStructuredSelector","selectKatsList","v4","uuidv4","axios","useSelector","uploadCats","styles","StyleSheet","create","container","paddingTop","height","tinyLogo","width","logo","KatsOverview","katImages","kat","setKat","getCats","catMap","maxItter","max","value","up","get","responseType","then","res","cat","preview","config","url","id","push","console","log","setTimeout","katsImg","state","kats","katsList","map","uri","mapDispatchToProps","dispatch","catArr","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectKatsList } from '../../redux/kats/kats.selectors'\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport axios from \"axios\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { StyleSheet, Text, View, Image } from 'react-native';\n\nimport {uploadCats} from '../../redux/kats/kats.actions';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height:600,\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n});\n\n\nfunction KatsOverview({uploadCats, katImages}) {\n\n  const [kat, setKat] = useState(false)\n\n  useEffect(() => {\n  getCats();\n\n}, [])\n\n  const getCats = async () => {\n\n  let catMap = [];\n  let maxItter = 20;\n\n\n  let max = 16\n  let value = 0\n  let up = true\n  //let imageNumber = getRandomInt(0,16);\n\n  do {\n    try {\n\n  await axios.get(`http://placekitten.com/200/300?image=${value}`, {\n    responseType: 'blob'\n  })\n   .then(res => {\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4()\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n\n      if (up == true && value <= max) {\n       value++\n\n    if (value == max) {\n      up = false;\n    }\n  } else {\n      up = false\n      value--;\n\n      if (value == 0) {\n        up = true;\n        }\n      }\n      \n      //let imageNumber = getRandomInt(0,16);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  while (maxItter > 0);\n  setTimeout(function() {\n      console.log('aa')\n    }, 2000);\n  uploadCats(catMap);\n}\n\nconst katsImg = useSelector(state => state.kats.katsList)\n\n\treturn (\n\t\t<View style={styles.container}>\n        { \n        katsImg.map(({id, preview}) => (\n          <Image\n              key={id}\n              source={{\n                width: 100,\n                height: 100,\n                uri: preview}}\n              /> \n          ))\n        } \n    \t</View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr))\n})\n\nconst mapStateToProps = createStructuredSelector({\n  katImages: selectKatsList,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KatsOverview);\n"]},"metadata":{},"sourceType":"module"}