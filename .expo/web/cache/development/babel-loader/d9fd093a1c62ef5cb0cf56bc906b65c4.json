{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectKatsList } from \"../../redux/kats/kats.selectors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { uploadCats as _uploadCats } from \"../../redux/kats/kats.actions\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height: 600\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats,\n      katImages = _ref.katImages;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      kat = _useState2[0],\n      setKat = _useState2[1];\n\n  useEffect(function () {\n    getCats();\n  }, []);\n\n  var getCats = function getCats() {\n    var catMap = [];\n    var maxItter = 20;\n\n    do {\n      return new Promise(function (resolve, reject) {\n        try {\n          axios.get('http://placekitten.com/200/300', {\n            responseType: 'blob'\n          }).then(function (res) {\n            var cat = _extends({}, {\n              preview: res.config.url,\n              id: uuidv4()\n            });\n\n            catMap.push(cat);\n          });\n          maxItter--;\n        } catch (error) {\n          console.log(error);\n        }\n      });\n    } while (maxItter > 0);\n\n    uploadCats(catMap);\n    resolve(catMap);\n  };\n\n  var katsImg = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }, console.log(katsImg), kat === true ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, katsImg.map(function (img) {\n    return React.createElement(Image, {\n      key: img.id,\n      source: {\n        width: 100,\n        height: 100,\n        uri: img.preview\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    });\n  }), \" \") : null);\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function uploadCats(catArr) {\n      return dispatch(_uploadCats(catArr));\n    }\n  };\n};\n\nvar mapStateToProps = createStructuredSelector({\n  katImages: selectKatsList\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","connect","createStructuredSelector","selectKatsList","v4","uuidv4","axios","useSelector","uploadCats","styles","StyleSheet","create","container","paddingTop","height","tinyLogo","width","logo","KatsOverview","katImages","kat","setKat","getCats","catMap","maxItter","Promise","resolve","reject","get","responseType","then","res","cat","preview","config","url","id","push","error","console","log","katsImg","state","kats","katsList","map","img","uri","mapDispatchToProps","dispatch","catArr","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectKatsList } from '../../redux/kats/kats.selectors'\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport axios from \"axios\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { StyleSheet, Text, View, Image } from 'react-native';\n\nimport {uploadCats} from '../../redux/kats/kats.actions';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height:600,\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n});\n\n\nfunction KatsOverview({uploadCats, katImages}) {\n\n  const [kat, setKat] = useState(false)\n\n  useEffect(() => {\n  getCats();\n\n}, [])\n\n  const getCats = () => {\n\n  let catMap = [];\n  let maxItter = 20;\n\n  do {\n    return new Promise ((resolve, reject) => {\n      try {\n          axios.get('http://placekitten.com/200/300', {\n          responseType: 'blob'\n        })\n          .then(res => {\n                 let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4()\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n      \n    } catch (error) {\n      console.log(error)\n    }\n  })}\n  while (maxItter > 0);\n  uploadCats(catMap);\n  resolve(catMap)\n}\n\nconst katsImg = useSelector(state => state.kats.katsList)\n\n\treturn (\n\t\t<View style={styles.container}>\n    {console.log(katsImg)}\n    {\n      kat === true ?\n      <View>\n        { \n        katsImg.map(img => (\n          <Image\n              key={img.id}\n              source={{\n                width: 100,\n                height: 100,\n                uri: img.preview}}\n              /> \n          ))\n\n} </View>\n: null\n  }\n    \t</View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr))\n})\n\nconst mapStateToProps = createStructuredSelector({\n  katImages: selectKatsList,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KatsOverview);"]},"metadata":{},"sourceType":"module"}