{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport KatsItem from \"../kats-item/kats-item.component\";\nimport { useName } from \"../../hooks/useName.jsx\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { uploadCats as _uploadCats } from \"../../redux/kats/kats.actions\";\nimport { filterCats as _filterCats } from \"../../redux/kats/kats.actions\";\nimport { selectKatsList } from \"../../redux/kats/kats.selectors\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 0,\n    height: 600\n  },\n  individual: {}\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats,\n      katImages = _ref.katImages,\n      filterCats = _ref.filterCats;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      kats = _useState2[0],\n      setKats = _useState2[1];\n\n  var katsImages = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n  var katsCount = useSelector(function (state) {\n    return state.kats.count;\n  });\n  useEffect(function () {\n    getCats();\n  }, []);\n  useEffect(function () {\n    var result = _toConsumableArray(katsImages);\n\n    if (katsCount) {\n      console.log(result.filter(function (result, index) {\n        return result[index];\n      }));\n    }\n  }, [katsImages, katsCount]);\n\n  var _useName = useName(kats),\n      names = _useName.names;\n\n  var getCats = function getCats() {\n    var catMap, maxItter, max, value, up, obj;\n    return _regeneratorRuntime.async(function getCats$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            catMap = [];\n            maxItter = 100;\n            max = 16;\n            value = 0;\n            up = true;\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(\"http://placekitten.com/200/300?image=\" + value, {\n              responseType: 'blob'\n            }).then(function (res) {\n              var cat = _extends({}, {\n                preview: res.config.url,\n                id: uuidv4()\n              });\n\n              catMap.push(cat);\n            }));\n\n          case 8:\n            maxItter--;\n\n            if (up == true && value <= max) {\n              value++;\n\n              if (value == max) {\n                up = false;\n              }\n            } else {\n              up = false;\n              value--;\n\n              if (value == 0) {\n                up = true;\n              }\n            }\n\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n\n          case 15:\n            if (maxItter > 0) {\n              _context.next = 5;\n              break;\n            }\n\n          case 16:\n            obj = kats.map(function (item, i) {\n              return _extends({}, item, catMap[i]);\n            });\n            setTimeout(function () {\n              console.log('aa');\n            }, 2000);\n            uploadCats(obj);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      height: 150,\n      margin: 20,\n      width: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return filterCats(30);\n    },\n    title: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return filterCats(50);\n    },\n    title: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return filterCats(100);\n    },\n    title: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), katsImages.map(function (_ref2) {\n    var id = _ref2.id,\n        otherProps = _objectWithoutProperties(_ref2, [\"id\"]);\n\n    return React.createElement(KatsItem, _extends({\n      key: id\n    }, otherProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }));\n  }));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function uploadCats(catArr) {\n      return dispatch(_uploadCats(catArr));\n    },\n    filterCats: function filterCats(count) {\n      return dispatch(_filterCats(count));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    katImages: selectKatsList(state)\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","connect","createStructuredSelector","v4","uuidv4","axios","useSelector","KatsItem","useName","uploadCats","filterCats","selectKatsList","styles","StyleSheet","create","container","paddingTop","height","individual","KatsOverview","katImages","kats","setKats","katsImages","state","katsList","katsCount","count","getCats","result","console","log","filter","index","names","catMap","maxItter","max","value","up","get","responseType","then","res","cat","preview","config","url","id","push","obj","map","item","i","setTimeout","flexDirection","flexWrap","margin","width","otherProps","mapDispatchToProps","dispatch","catArr","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport axios from \"axios\";\n\nimport { useSelector } from \"react-redux\";\n\nimport KatsItem from '../kats-item/kats-item.component'\n\nimport { useName } from '../../hooks/useName.jsx'\n\nimport { Button, View, StyleSheet, Text } from 'react-native';\n\nimport {uploadCats} from '../../redux/kats/kats.actions';\nimport { filterCats } from '../../redux/kats/kats.actions'\nimport { selectKatsList } from '../../redux/kats/kats.selectors'\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 0,\n    height:600,\n  }, individual: {\n    \n  },\n});\n\n\nfunction KatsOverview({uploadCats, katImages, filterCats}) {\n\n  const [kats, setKats] = useState([])\n\n  const katsImages = useSelector(state => state.kats.katsList)\n  const katsCount = useSelector(state => state.kats.count)\n\n  useEffect(() => {\n  getCats();\n\n}, [])\n\n  useEffect(() => {\n    let result = [...katsImages];\n\n      if (katsCount) {\n      console.log(result.filter((result, index) => result[index]))\n      }\n      //setKats(result);\n\n  }, [katsImages, katsCount])\n\n\n  //getting names\n  const { names } = useName(kats);\n\n  const getCats = async () => {\n\n  // getting cats\n  let catMap = [];\n  let maxItter = 100;\n\n  //random images\n  let max = 16\n  let value = 0\n  let up = true\n\n  do {\n    try {\n\n  await axios.get(`http://placekitten.com/200/300?image=${value}`, {\n    responseType: 'blob'\n  })\n   .then(res => {\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4(),\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n\n      if (up == true && value <= max) {\n       value++\n\n      if (value == max) {\n        up = false;\n      }\n    }  else {\n        up = false\n        value--;\n\n      if (value == 0) {\n        up = true;\n        }\n      }\n      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n  while (maxItter > 0);\n\n  const obj = kats.map((item, i) => Object.assign({}, item, catMap[i]))\n\n  setTimeout(function() {\n      console.log('aa')\n    }, 2000);\n  uploadCats(obj);\n}\n\n\n\treturn (\n\t\t<View style={styles.container}>\n      <View style={{flexDirection:'row', flexWrap:'wrap', height: 150, margin: 20, width: 100}}>\n          <Button\n            onPress={() => filterCats(30)}\n            title=\"30\"\n          />\n          <Button\n            onPress={() => filterCats(50)}\n            title=\"50\"\n          />\n          <Button\n            onPress={() => filterCats(100)}\n            title=\"100\"\n          />\n        </View>\n        { \n        katsImages.map(({id, ...otherProps}) => (\n          <KatsItem\n              key={id}\n              {...otherProps}\n              />\n          ))\n        }\n    \t</View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr)),\n  filterCats: (count) => dispatch(filterCats(count))\n})\n\nconst mapStateToProps = (state) => ({\n  katImages: selectKatsList(state)\n})\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);\n"]},"metadata":{},"sourceType":"module"}