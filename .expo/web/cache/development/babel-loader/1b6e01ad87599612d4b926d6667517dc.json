{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { uploadCats as _uploadCats } from \"../../redux/kats/kats.actions\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats;\n  var katImages = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n\n  var getCats = function getCats() {\n    var catMap = [];\n    var maxItter = 20;\n\n    do {\n      try {\n        axios.get('http://placekitten.com/200/300', {\n          responseType: 'blob'\n        }).then(function (res) {\n          var cat = _extends(res.data, {\n            preview: URL.createObjectURL(res.data),\n            id: uuidv4()\n          });\n\n          catMap.push(cat);\n        });\n        maxItter--;\n      } catch (error) {\n        console.log(error);\n      }\n    } while (maxItter > 0);\n\n    uploadCats(catMap);\n  };\n\n  useEffect(function () {\n    getCats();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, katImages.map(function (item) {\n    return React.createElement(Image, {\n      key: item.id,\n      style: styles.logo,\n      source: {\n        uri: item.preview\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    });\n  }));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function uploadCats(catArr) {\n      return dispatch(_uploadCats(catArr));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useEffect","connect","v4","uuidv4","axios","useSelector","uploadCats","styles","StyleSheet","create","container","paddingTop","tinyLogo","width","height","logo","KatsOverview","katImages","state","kats","katsList","getCats","catMap","maxItter","get","responseType","then","res","cat","data","preview","URL","createObjectURL","id","push","error","console","log","map","item","uri","mapDispatchToProps","dispatch","catArr"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;;;AAIA,SAAQC,UAAU,IAAVA,WAAR;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GADoB;AAI/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GAJqB;AAQ/BC,EAAAA,IAAI,EAAE;AACJF,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AARyB,CAAlB,CAAf;;AAeA,SAASE,YAAT,OAAoC;AAAA;;AAAA,MAAbV,UAAa,QAAbA,UAAa;AAElC,MAAMW,SAAS,GAAGZ,WAAW,CAAC,UAAAa,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAf;AAAA,GAAN,CAA7B;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEtB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAG;AACD,UAAI;AAENnB,QAAAA,KAAK,CAACoB,GAAN,CAAU,gCAAV,EAA4C;AAC1CC,UAAAA,YAAY,EAAE;AAD4B,SAA5C,EAGEC,IAHF,CAGO,UAAAC,GAAG,EAAI;AACV,cAAIC,GAAG,GAAG,SAAcD,GAAG,CAACE,IAAlB,EAAwB;AACtBC,YAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,GAAG,CAACE,IAAxB,CADa;AAEtBI,YAAAA,EAAE,EAAE9B,MAAM;AAFY,WAAxB,CAAV;;AAKAmB,UAAAA,MAAM,CAACY,IAAP,CAAYN,GAAZ;AACA,SAVJ;AAWIL,QAAAA,QAAQ;AACT,OAdD,CAcE,OAAOY,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAlBD,QAmBOZ,QAAQ,GAAG,CAnBlB;;AAoBAjB,IAAAA,UAAU,CAACgB,MAAD,CAAV;AACD,GA1BC;;AA4BFtB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,OAAO;AAER,GAHQ,EAGN,EAHM,CAAT;AAKC,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEAO,SAAS,CAACqB,GAAV,CAAc,UAACC,IAAD;AAAA,WACV,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACN,EADZ;AAEE,MAAA,KAAK,EAAE1B,MAAM,CAACQ,IAFhB;AAGE,MAAA,MAAM,EAAE;AACNyB,QAAAA,GAAG,EAAED,IAAI,CAACT;AADJ,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAd,CAFA,CADD;AAcA;;AAED,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCpC,IAAAA,UAAU,EAAE,oBAACqC,MAAD;AAAA,aAAYD,QAAQ,CAACpC,WAAU,CAACqC,MAAD,CAAX,CAApB;AAAA;AAD0B,GAAL;AAAA,CAAnC;;AAIA,eAAe1C,OAAO,CAAC,IAAD,EAAOwC,kBAAP,CAAP,CAAkCzB,YAAlC,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport { connect } from 'react-redux';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport axios from \"axios\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { StyleSheet, Text, View, Image } from 'react-native';\n\nimport {uploadCats} from '../../redux/kats/kats.actions'\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n});\n\n\nfunction KatsOverview({uploadCats}) {\n\n  const katImages = useSelector(state => state.kats.katsList)\n\n  const getCats = () => {\n\n  let catMap = [];\n  let maxItter = 20;\n\n  do {\n    try {\n\n  axios.get('http://placekitten.com/200/300', {\n    responseType: 'blob'\n  })\n   .then(res => {\n      let cat = Object.assign(res.data, {\n                  preview: URL.createObjectURL(res.data),\n                  id: uuidv4()\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  while (maxItter > 0);\n  uploadCats(catMap)\n}\n\nuseEffect(() => {\n  getCats();\n\n}, [])\n\n\treturn (\n\t\t<View style={styles.container}>\n{\n  katImages.map((item) => \n      <Image\n        key={item.id}\n        style={styles.logo}\n        source={{\n          uri: item.preview}} />\n    )\n  }\n\t\n    \t</View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr))\n})\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);"]},"metadata":{},"sourceType":"module"}