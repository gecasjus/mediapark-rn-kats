{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport NetInfo from '@react-native-community/netinfo';\nvar currentNetwork;\nNetInfo.fetch().then(function (state) {\n  currentNetwork = state.isConnected;\n});\n\nvar useConnection = function useConnection() {\n  var _useState = useState(currentNetwork),\n      _useState2 = _slicedToArray(_useState, 2),\n      netInfo = _useState2[0],\n      setNetInfo = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribe = NetInfo.addEventListener(function (state) {\n      setNetInfo(state.isConnected);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return netInfo;\n};\n\nexport default useConnection;","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/hooks/useConnection.js"],"names":["useState","useEffect","NetInfo","currentNetwork","fetch","then","state","isConnected","useConnection","netInfo","setNetInfo","unsubscribe","addEventListener"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AAEA,IAAIC,cAAJ;AAEAD,OAAO,CAACE,KAAR,GAAgBC,IAAhB,CAAqB,UAACC,KAAD,EAAW;AAC9BH,EAAAA,cAAc,GAAGG,KAAK,CAACC,WAAvB;AACD,CAFD;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACIR,QAAQ,CAACG,cAAD,CADZ;AAAA;AAAA,MACnBM,OADmB;AAAA,MACVC,UADU;;AAG1BT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,WAAW,GAAGT,OAAO,CAACU,gBAAR,CAAyB,UAACN,KAAD,EAAW;AACtDI,MAAAA,UAAU,CAACJ,KAAK,CAACC,WAAP,CAAV;AACD,KAFmB,CAApB;AAGA,WAAO;AAAA,aAAMI,WAAW,EAAjB;AAAA,KAAP;AACD,GALQ,EAKN,EALM,CAAT;AAOA,SAAOF,OAAP;AACD,CAXD;;AAaA,eAAeD,aAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport NetInfo from '@react-native-community/netinfo';\n\nlet currentNetwork;\n\nNetInfo.fetch().then((state) => {\n  currentNetwork = state.isConnected;\n});\n\nconst useConnection = () => {\n  const [netInfo, setNetInfo] = useState(currentNetwork);\n\n  useEffect(() => {\n    const unsubscribe = NetInfo.addEventListener((state) => {\n      setNetInfo(state.isConnected);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  return netInfo;\n};\n\nexport default useConnection;"]},"metadata":{},"sourceType":"module"}