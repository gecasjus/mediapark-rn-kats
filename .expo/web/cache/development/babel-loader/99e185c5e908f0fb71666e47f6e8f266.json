{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(rootSaga);\n\nimport { all, call } from 'redux-saga/effects';\nimport { onCatsReceive } from \"./kats/kats.sagas\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([call(onCatsReceive)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/redux/root.saga.js"],"names":["rootSaga","all","call","onCatsReceive"],"mappings":";;uCAIyBA,Q;;AAJzB,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,SAAQC,aAAR;AAEA,eAAe,SAAUH,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMC,GAAG,CAAC,CACTC,IAAI,CAACC,aAAD,CADK,CAAD,CAAT;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call } from 'redux-saga/effects';\n\nimport {onCatsReceive} from './kats/kats.sagas'\n\nexport default function* rootSaga(){\n\tyield all([\n\t\tcall(onCatsReceive)\n\t\t])\n}"]},"metadata":{},"sourceType":"module"}