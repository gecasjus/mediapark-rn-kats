{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport KatsItem from \"../kats-item/kats-item.component\";\nimport { useName } from \"../../hooks/useName.jsx\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { uploadCats as _uploadCats } from \"../../redux/kats/kats.actions\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 0,\n    height: 600\n  },\n  individual: {}\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats,\n      katImages = _ref.katImages;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      kat = _useState2[0],\n      setKat = _useState2[1];\n\n  useEffect(function () {\n    getCats();\n  }, []);\n\n  var _useName = useName(),\n      names = _useName.names;\n\n  var getCats = function getCats() {\n    var catMap, maxItter, max, value, up;\n    return _regeneratorRuntime.async(function getCats$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            catMap = [];\n            maxItter = 100;\n            max = 16;\n            value = 0;\n            up = true;\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(\"http://placekitten.com/200/300?image=\" + value, {\n              responseType: 'blob'\n            }).then(function (res) {\n              var cat = _extends({}, {\n                preview: res.config.url,\n                id: uuidv4()\n              });\n\n              catMap.push(cat);\n            }));\n\n          case 8:\n            maxItter--;\n\n            if (up == true && value <= max) {\n              value++;\n\n              if (value == max) {\n                up = false;\n              }\n            } else {\n              up = false;\n              value--;\n\n              if (value == 0) {\n                up = true;\n              }\n            }\n\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n\n          case 15:\n            if (maxItter > 0) {\n              _context.next = 5;\n              break;\n            }\n\n          case 16:\n            setTimeout(function () {\n              console.log('aa');\n            }, 2000);\n            uploadCats(catMap);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  var katsImg = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n  var katName = names.map(function (name, index) {\n    return React.createElement(Text, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }\n    }, name);\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      height: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), katsImg.map(function (item, index) {\n    return React.createElement(View, {\n      style: styles.individual,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, React.createElement(KatsItem, {\n      key: item.id,\n      id: index,\n      names: katName[index],\n      preview: item.preview,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }));\n  }));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function uploadCats(catArr) {\n      return dispatch(_uploadCats(catArr));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","connect","createStructuredSelector","v4","uuidv4","axios","useSelector","KatsItem","useName","uploadCats","styles","StyleSheet","create","container","paddingTop","height","individual","KatsOverview","katImages","kat","setKat","getCats","names","catMap","maxItter","max","value","up","get","responseType","then","res","cat","preview","config","url","id","push","console","log","setTimeout","katsImg","state","kats","katsList","katName","map","name","index","flexDirection","flexWrap","item","mapDispatchToProps","dispatch","catArr"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport axios from \"axios\";\n\nimport { useSelector } from \"react-redux\";\n\nimport KatsItem from '../kats-item/kats-item.component'\n\nimport { useName } from '../../hooks/useName.jsx'\n\nimport { Button, View, StyleSheet, Text } from 'react-native';\n\nimport {uploadCats} from '../../redux/kats/kats.actions';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 0,\n    height:600,\n  }, individual: {\n    \n  },\n});\n\n\nfunction KatsOverview({uploadCats, katImages}) {\n\n  const [kat, setKat] = useState(false)\n\n  useEffect(() => {\n  getCats();\n\n}, [])\n\n\n  //getting names\n  const { names } = useName();\n\n  const getCats = async () => {\n\n  let catMap = [];\n  let maxItter = 100;\n\n  //random images\n  let max = 16\n  let value = 0\n  let up = true\n\n  do {\n    try {\n\n  await axios.get(`http://placekitten.com/200/300?image=${value}`, {\n    responseType: 'blob'\n  })\n   .then(res => {\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4()\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n\n      if (up == true && value <= max) {\n       value++\n\n      if (value == max) {\n        up = false;\n      }\n    }  else {\n        up = false\n        value--;\n\n      if (value == 0) {\n        up = true;\n        }\n      }\n      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n  while (maxItter > 0);\n  setTimeout(function() {\n      console.log('aa')\n    }, 2000);\n  uploadCats(catMap);\n}\n\nconst katsImg = useSelector(state => state.kats.katsList)\n\nlet katName = names.map((name, index) => \n  <Text key={index}>\n    {name}  \n  </Text>\n  )\n\n\treturn (\n\t\t<View style={styles.container}>\n      <View style={{flexDirection:'row', flexWrap:'wrap', height: 50}}>\n          <Button\n            title=\"30\"\n          />\n          <Button\n            title=\"50\"\n          />\n          <Button\n            title=\"100\"\n          />\n        </View>\n        { \n        katsImg.map((item, index) => (\n          <View style={styles.individual}>\n          <KatsItem\n              key={item.id}\n              id={index}\n              names={katName[index]}\n              preview={item.preview}\n          \n            />\n            </View> \n          ))\n        }\n    \t</View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr))\n})\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);\n"]},"metadata":{},"sourceType":"module"}