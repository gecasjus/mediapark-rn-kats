{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nexport var useName = function useName(kats) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      names = _useState2[0],\n      setName = _useState2[1];\n\n  var getNames = function getNames() {\n    return _regeneratorRuntime.async(function getNames$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('https://api.fungenerators.com/name/generate?category=car&limit=100').then(function (res) {\n              var katNames = res.data.contents.names;\n              katNames.map(function (name) {\n                var promises = _extends(kats, {\n                  cat: name\n                });\n\n                Promise.all(promises);\n              });\n              setName(katNames);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getNames();\n  }, []);\n  return {\n    names: names\n  };\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/hooks/useName.jsx"],"names":["useState","useEffect","axios","useName","kats","names","setName","getNames","get","then","res","katNames","data","contents","map","name","promises","cat","Promise","all"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAAA,kBAGPJ,QAAQ,CAAC,EAAD,CAHD;AAAA;AAAA,MAGzBK,KAHyB;AAAA,MAGlBC,OAHkB;;AAKhC,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACVL,KAAK,CAACM,GAAN,CAAU,oEAAV,EACJC,IADI,CACC,UAAAC,GAAG,EAAI;AACZ,kBAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,QAAT,CAAkBR,KAAnC;AACAM,cAAAA,QAAQ,CAACG,GAAT,CAAa,UAAAC,IAAI,EAAI;AACpB,oBAAMC,QAAQ,GAAG,SAAcZ,IAAd,EAAoB;AACpCa,kBAAAA,GAAG,EAAEF;AAD+B,iBAApB,CAAjB;;AAGAG,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,eALD;AAMAV,cAAAA,OAAO,CAACK,QAAD,CAAP;AACD,aAVK,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAcAV,EAAAA,SAAS,CAAC,YAAM;AACfM,IAAAA,QAAQ;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO;AAACF,IAAAA,KAAK,EAALA;AAAD,GAAP;AACA,CAvBM","sourcesContent":["import {useState, useEffect} from 'react';\n\nimport axios from \"axios\";\n\nexport const useName = (kats) => {\n\n\n\tconst [names, setName] = useState([])\n\n\tconst getNames = async () => {\n\t\tawait axios.get('https://api.fungenerators.com/name/generate?category=car&limit=100')\n\t\t\t.then(res => {\n\t\t\t\tconst katNames = res.data.contents.names\n\t\t\t\tkatNames.map(name => {\n\t\t\t\t\tconst promises = Object.assign(kats, {\n\t\t\t\t\t\tcat: name\n\t\t\t\t\t})\n\t\t\t\t\tPromise.all(promises)\n\t\t\t\t})\n\t\t\t\tsetName(katNames)\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tgetNames();\n\t}, [])\n\treturn {names}\n}"]},"metadata":{},"sourceType":"module"}