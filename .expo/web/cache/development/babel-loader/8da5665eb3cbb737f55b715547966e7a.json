{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(getCats),\n    _marked2 = _regeneratorRuntime.mark(onCatsReceive);\n\nimport { all, call, takeLatest, put } from 'redux-saga/effects';\nimport { receiveCats } from \"./kats.actions\";\nimport katsActionTypes from \"./kats.types\";\nimport { fetchCats } from \"../../api.calls.js\";\nexport function getCats(action) {\n  var data;\n  return _regeneratorRuntime.wrap(function getCats$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(action.catMap);\n          _context.prev = 1;\n          _context.next = 4;\n          return call(fetchCats);\n\n        case 4:\n          data = _context.sent;\n          _context.next = 7;\n          return put(receiveCats(action.payload));\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\nexport function onCatsReceive() {\n  return _regeneratorRuntime.wrap(function onCatsReceive$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(katsActionTypes.REQUEST_CATS, getCats);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/redux/kats/kats.sagas.js"],"names":["getCats","onCatsReceive","all","call","takeLatest","put","receiveCats","katsActionTypes","fetchCats","action","console","log","catMap","data","payload","REQUEST_CATS"],"mappings":";;uCAOiBA,O;wCAWAC,a;;AAlBjB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAAQC,WAAR;AACA,OAAOC,eAAP;AACA,SAAQC,SAAR;AAGA,OAAO,SAAUR,OAAV,CAAkBS,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,MAAnB;AADM;AAAA;AAGQ,iBAAMT,IAAI,CAACK,SAAD,CAAV;;AAHR;AAGCK,UAAAA,IAHD;AAAA;AAIL,iBAAMR,GAAG,CAACC,WAAW,CAACG,MAAM,CAACK,OAAR,CAAZ,CAAT;;AAJK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMLJ,UAAAA,OAAO,CAACC,GAAR;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAUV,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAMG,UAAU,CAACG,eAAe,CAACQ,YAAjB,EAA+Bf,OAA/B,CAAhB;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects';\n\nimport {receiveCats} from './kats.actions'\nimport katsActionTypes from './kats.types';\nimport {fetchCats} from '../../api.calls.js'\n\n\nexport function* getCats(action) {\n\tconsole.log(action.catMap)\n\ttry {\n\t\tconst data = yield call(fetchCats)\n\t\tyield put(receiveCats(action.payload))\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\n\nexport function* onCatsReceive() {\n\tyield takeLatest(katsActionTypes.REQUEST_CATS, getCats)\n}"]},"metadata":{},"sourceType":"module"}