{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from 'uuid';\nexport var fetchCats = function fetchCats() {\n  var catMap, maxItter, max, value, up;\n  return _regeneratorRuntime.async(function fetchCats$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          catMap = [];\n          maxItter = 100;\n          max = 16;\n          value = 0;\n          up = true;\n\n        case 5:\n          _context.prev = 5;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(\"http://placekitten.com/200/300?image=\" + value).then(function (res) {\n            console.log(res);\n\n            var cat = _extends({}, {\n              preview: res.config.url,\n              id: uuidv4()\n            });\n\n            catMap.push(cat);\n          }));\n\n        case 8:\n          maxItter--;\n\n          if (up == true && value <= max) {\n            value++;\n\n            if (value == max) {\n              up = false;\n            }\n          } else {\n            up = false;\n            value--;\n\n            if (value == 0) {\n              up = true;\n            }\n          }\n\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](5);\n          console.log(_context.t0);\n          throw _context.t0;\n\n        case 16:\n          if (maxItter > 0) {\n            _context.next = 5;\n            break;\n          }\n\n        case 17:\n          console.log(catMap);\n          return _context.abrupt(\"return\", catMap);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[5, 12]], Promise);\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/api.calls.js"],"names":["axios","v4","uuidv4","fetchCats","catMap","maxItter","max","value","up","get","then","res","console","log","cat","preview","config","url","id","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBC,UAAAA,MAFmB,GAEV,EAFU;AAGnBC,UAAAA,QAHmB,GAGR,GAHQ;AAMnBC,UAAAA,GANmB,GAMb,EANa;AAOnBC,UAAAA,KAPmB,GAOX,CAPW;AAQnBC,UAAAA,EARmB,GAQd,IARc;;AAAA;AAAA;AAAA;AAAA,2CAYjBR,KAAK,CAACS,GAAN,2CAAkDF,KAAlD,EACJG,IADI,CACC,UAAAC,GAAG,EAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACE,gBAAIG,GAAG,GAAG,SAAc,EAAd,EAAkB;AAChBC,cAAAA,OAAO,EAAEJ,GAAG,CAACK,MAAJ,CAAWC,GADJ;AAEhBC,cAAAA,EAAE,EAAEhB,MAAM;AAFM,aAAlB,CAAV;;AAKAE,YAAAA,MAAM,CAACe,IAAP,CAAYL,GAAZ;AACA,WATE,CAZiB;;AAAA;AAsBnBT,UAAAA,QAAQ;;AACR,cAAIG,EAAE,IAAI,IAAN,IAAcD,KAAK,IAAID,GAA3B,EAAgC;AAC/BC,YAAAA,KAAK;;AAEN,gBAAIA,KAAK,IAAID,GAAb,EAAkB;AAChBE,cAAAA,EAAE,GAAG,KAAL;AACD;AACF,WANC,MAMM;AACJA,YAAAA,EAAE,GAAG,KAAL;AACAD,YAAAA,KAAK;;AAEP,gBAAIA,KAAK,IAAI,CAAb,EAAgB;AACdC,cAAAA,EAAE,GAAG,IAAL;AACC;AACF;;AApCkB;AAAA;;AAAA;AAAA;AAAA;AAuCnBI,UAAAA,OAAO,CAACC,GAAR;AAvCmB;;AAAA;AAAA,cA2ChBR,QAAQ,GAAG,CA3CK;AAAA;AAAA;AAAA;;AAAA;AA4CvBO,UAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AA5CuB,2CA6ChBA,MA7CgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import axios from \"axios\";\nimport { v4 as uuidv4 } from 'uuid';\n//import receiveCats\n\nexport const fetchCats = async () => {\n\n  let catMap = [];\n  let maxItter = 100;\n\n  //random images\n  let max = 16\n  let value = 0\n  let up = true\n\n  do {\n    try {\n  await axios.get(`http://placekitten.com/200/300?image=${value}`)\n   .then(res => {\n   \tconsole.log(res)\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4(),\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n      if (up == true && value <= max) {\n       value++\n\n      if (value == max) {\n        up = false;\n      }\n    }  else {\n        up = false\n        value--;\n\n      if (value == 0) {\n        up = true;\n        }\n      }\n      \n    } catch (error) {\n      console.log(error)\n      throw error;\n    }\n  }\n  while (maxItter > 0);\n  console.log(catMap)\n  return catMap\n} "]},"metadata":{},"sourceType":"module"}