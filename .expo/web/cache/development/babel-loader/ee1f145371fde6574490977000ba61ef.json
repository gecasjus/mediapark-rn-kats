{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport KatsItem from \"../kats-item/kats-item.component\";\nimport { requestCats } from \"../../redux/kats/kats.actions\";\nimport { filterCats } from \"../../redux/kats/kats.actions\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport Modal from 'react-native-modal';\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height: 750,\n    marginTop: 0\n  },\n  spinnerTextStyle: {\n    color: 'black'\n  }\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      katFilter = _useState2[0],\n      setKatFilter = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      _onChangeText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isModalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var katsImages = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n  var katsCount = useSelector(function (state) {\n    return state.kats.count;\n  });\n  var isLoading = useSelector(function (state) {\n    return state.kats.isUploading;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var result = _toConsumableArray(katsImages);\n\n    if (katsCount) {\n      result = result.slice(0, katsCount);\n    }\n\n    setKatFilter(result);\n  }, [katsImages, katsCount]);\n  useEffect(function () {\n    dispatch(requestCats());\n  }, []);\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, React.createElement(Spinner, {\n    visible: isLoading,\n    color: 'black',\n    textContent: 'Loading...',\n    style: styles.spinnerTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      width: '20%',\n      backgroundColor: 'orange',\n      marginHorizontal: 30,\n      borderRadius: 5,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      marginTop: 20\n    },\n    onPress: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Filter\")), React.createElement(Modal, {\n    isVisible: isModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return dispatch(filterCats(30));\n    },\n    style: {\n      width: '25%',\n      borderColor: 'white',\n      height: '20%',\n      borderWidth: 1,\n      marginHorizontal: 25,\n      borderRadius: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 0,\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"30\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return dispatch(filterCats(50));\n    },\n    style: {\n      width: '25%',\n      height: '20%',\n      borderWidth: 1,\n      borderColor: 'white',\n      marginHorizontal: 25,\n      borderRadius: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 0,\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }\n  }, \"50\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return dispatch(filterCats(100));\n    },\n    style: {\n      width: '25%',\n      height: '20%',\n      borderColor: 'white',\n      borderWidth: 1,\n      marginHorizontal: 25,\n      borderRadius: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 0,\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 20\n    }\n  }, \"100\"))), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"type number\",\n    placeholderTextColor: \"white\",\n    style: {\n      height: 40,\n      width: 150,\n      borderColor: 'gray',\n      borderWidth: 1,\n      color: 'white'\n    },\n    onChangeText: function onChangeText(text) {\n      _onChangeText(text);\n\n      dispatch(filterCats(text));\n    },\n    value: text,\n    defaultValue: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: {\n      width: '30%',\n      height: 32,\n      alignSelf: 'center',\n      backgroundColor: 'orange',\n      marginHorizontal: 30,\n      borderRadius: 5\n    },\n    onPress: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      alignSelf: 'center',\n      padding: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Close\"))), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 14\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      flex: 1\n    },\n    data: katFilter,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(KatsItem, {\n        key: item.id,\n        item: item,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  })));\n}\n\nexport default KatsOverview;","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","KatsItem","requestCats","filterCats","Spinner","Modal","styles","StyleSheet","create","container","paddingTop","height","marginTop","spinnerTextStyle","color","KatsOverview","navigation","katFilter","setKatFilter","undefined","text","onChangeText","isModalVisible","setModalVisible","katsImages","state","kats","katsList","katsCount","count","isLoading","isUploading","dispatch","result","slice","toggleModal","flex","width","backgroundColor","marginHorizontal","borderRadius","justifyContent","alignSelf","padding","flexDirection","alignItems","borderColor","borderWidth","fontSize","marginBottom","item","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { \n  View, \n  StyleSheet, \n  Text, \n  FlatList, \n  TouchableOpacity, \n  TextInput \n} from 'react-native';\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport KatsItem from '../kats-item/kats-item.component'\n\nimport { requestCats } from '../../redux/kats/kats.actions';\nimport { filterCats } from '../../redux/kats/kats.actions'\n\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport Modal from 'react-native-modal';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height:750,\n    marginTop: 0\n  }, spinnerTextStyle: {\n    color: 'black'\n  }\n});\n\nfunction KatsOverview({navigation}) {\n\n  const [katFilter, setKatFilter] = useState([])\n\n  const [text, onChangeText] = useState(undefined);\n\n  const [isModalVisible, setModalVisible] = useState(false);\n\n\n  const katsImages = useSelector(state => state.kats.katsList)\n  const katsCount = useSelector(state => state.kats.count)\n  const isLoading = useSelector(state => state.kats.isUploading)\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    let result = [...katsImages];\n\n      if (katsCount) {\n      result = result.slice(0, katsCount)\n      }\n      setKatFilter(result);\n\n  }, [katsImages, katsCount])\n\nuseEffect(() => {\n  dispatch(requestCats());\n}, [])\n\nconst toggleModal = () => {\n    setModalVisible(!isModalVisible);\n  };\n\n\n\treturn (\n\t\t<View style={{flex:1}}>\n      <Spinner\n          visible={isLoading}\n          color={'black'}\n          textContent={'Loading...'}\n          style={styles.spinnerTextStyle}\n        />\n        <TouchableOpacity \n          style={{width:'20%', backgroundColor:'orange', marginHorizontal:30, borderRadius: 5, justifyContent: 'center', alignSelf:'center', marginTop: 20}}\n          onPress={toggleModal}>\n          <Text style={{color:'white', alignSelf:'center', padding:5}}>Filter</Text>\n        </TouchableOpacity>\n\n        <Modal isVisible={isModalVisible}>\n          <View style={{flex:1, flexDirection:'row', justifyContent: 'center', alignItems: 'center', marginTop:100}}>     \n               <TouchableOpacity\n                    onPress={() => dispatch(filterCats(30))}\n                    style={{width:'25%', borderColor:'white', height: '20%', borderWidth:1, marginHorizontal:25, borderRadius: 12,}}\n                  >\n                    <Text style={{color:'white', alignSelf:'center', padding:0, fontSize: 30,}}>30</Text>\n                </TouchableOpacity>\n                  <TouchableOpacity\n                  onPress={() => dispatch(filterCats(50))}\n                   style={{width:'25%', height: '20%', borderWidth:1, borderColor:'white', marginHorizontal:25, borderRadius: 12,}}\n                    >\n                   <Text style={{color:'white', alignSelf:'center', padding:0, fontSize: 30,}}>50</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={() => dispatch(filterCats(100))}\n                   style={{width:'25%', height: '20%', borderColor:'white', borderWidth:1, marginHorizontal:25, borderRadius: 12,}}\n                    >\n                   <Text style={{color:'white', alignSelf:'center', padding:0, fontSize: 30,}}>100</Text>\n                  </TouchableOpacity>\n                  </View>\n                  <View style={{flex: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginBottom:150,\n                  }}>\n                  <View style={{flex: 1,}}>\n                    <TextInput\n                      placeholder='type number'\n                      placeholderTextColor=\"white\"\n                      style={{height: 40, width:150, borderColor: 'gray', borderWidth: 1, color: 'white'}}\n                      onChangeText={(text) => {\n                        onChangeText(text);\n                        dispatch(filterCats(text))\n                      }}\n                      value={text}\n                      defaultValue={text}\n                    />\n                  </View>\n                    </View>\n                  <TouchableOpacity \n                  style={{width:'30%', height: 32, alignSelf:'center', backgroundColor:'orange', marginHorizontal:30, borderRadius: 5,}}\n                  onPress={toggleModal}>\n                    <Text style={{color:'white', alignSelf:'center', padding:7}}>Close</Text>\n                  </TouchableOpacity>\n          </Modal>\n             <View style={styles.container}>\n              <FlatList\n                style={{flex:1}}\n                data={katFilter}\n                renderItem={({item}) => <KatsItem key={item.id} item={item} navigation={navigation}/>}\n                keyExtractor={item => item.id}\n              />\n          \t</View>\n      </View>\n\t\t)\n}\n\nexport default KatsOverview;\n"]},"metadata":{},"sourceType":"module"}