{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { uploadCats as _uploadCats } from \"../../redux/kats/kats.actions\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height: 600\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\n\nfunction KatsOverview(_ref) {\n  var _this = this;\n\n  var uploadCats = _ref.uploadCats;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      kat = _useState2[0],\n      setKat = _useState2[1];\n\n  var katImages = useSelector(function (state) {\n    return state.kats.katsList;\n  });\n\n  var getCats = function getCats() {\n    var catMap = [];\n    var maxItter = 20;\n\n    do {\n      try {\n        axios.get('http://placekitten.com/200/300', {\n          responseType: 'blob'\n        }).then(function (res) {\n          var cat = _extends({}, {\n            preview: res.config.url,\n            id: uuidv4()\n          });\n\n          catMap.push(cat);\n        });\n        maxItter--;\n      } catch (error) {\n        console.log(error);\n      }\n    } while (maxItter > 0);\n\n    setKat(catMap);\n    uploadCats(catMap);\n  };\n\n  useEffect(function () {\n    getCats();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, console.log(katImages), console.log(kat.map(function (img) {\n    return img.preview;\n  })), katImages.map(function (_ref2) {\n    var id = _ref2.id,\n        preview = _ref2.preview;\n    return React.createElement(Image, {\n      key: id,\n      source: {\n        width: 100,\n        height: 100,\n        uri: preview\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }\n    });\n  }));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadCats: function uploadCats(catArr) {\n      return dispatch(_uploadCats(catArr));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/components/kats-overview/kats-overview.component.jsx"],"names":["React","useState","useEffect","connect","v4","uuidv4","axios","useSelector","uploadCats","styles","StyleSheet","create","container","paddingTop","height","tinyLogo","width","logo","KatsOverview","kat","setKat","katImages","state","kats","katsList","getCats","catMap","maxItter","get","responseType","then","res","cat","preview","config","url","id","push","error","console","log","map","img","uri","mapDispatchToProps","dispatch","catArr"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport axios from \"axios\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { StyleSheet, Text, View, Image } from 'react-native';\n\nimport {uploadCats} from '../../redux/kats/kats.actions';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    height:600,\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n});\n\n\nfunction KatsOverview({uploadCats}) {\n\n  const [kat, setKat] = useState([])\n\n  const katImages = useSelector(state => state.kats.katsList)\n\n  const getCats = () => {\n\n  let catMap = [];\n  let maxItter = 20;\n\n  do {\n    try {\n\n  axios.get('http://placekitten.com/200/300', {\n    responseType: 'blob'\n  })\n   .then(res => {\n      let cat = Object.assign({}, {\n                  preview: res.config.url,\n                  id: uuidv4()\n              }\n        )\n      catMap.push(cat)\n     })\n      maxItter--\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  while (maxItter > 0);\n  setKat(catMap);\n  uploadCats(catMap);\n}\n\nuseEffect(() => {\n  getCats();\n\n}, [])\n\n\treturn (\n\t\t<View style={styles.container}>\n    {console.log(katImages)}\n    {console.log(kat.map(img => img.preview))}\n{\n  katImages.map(({id, preview}) => \n     <Image\n        key={id}\n        source={{\n          width: 100,\n          height: 100,\n          uri: preview\n        }} \n        />\n    )\n}\n\n  \n    \t</View>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  uploadCats: (catArr) => dispatch(uploadCats(catArr))\n})\n\nexport default connect(null, mapDispatchToProps)(KatsOverview);"]},"metadata":{},"sourceType":"module"}