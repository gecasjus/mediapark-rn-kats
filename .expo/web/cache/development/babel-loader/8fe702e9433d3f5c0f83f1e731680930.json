{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport axios from \"axios\";\nexport var getNames = function getNames() {\n  var arr;\n  return _regeneratorRuntime.async(function getNames$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          arr = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100').then(function (res) {\n            var catnames = Object.values(res.data).map(function (res) {\n              return res.map(function (kitty) {\n                return kitty.name;\n              });\n            });\n            var unnestedNames = catnames.flat();\n\n            var spread = _toConsumableArray(unnestedNames);\n\n            spread.map(function (item) {\n              arr.push({\n                cat: item\n              });\n            });\n          }).catch(function (err) {\n            console.log(err);\n          }));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](1);\n          throw _context.t0;\n\n        case 9:\n          return _context.abrupt(\"return\", arr);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/api-calls/api-name.js"],"names":["axios","getNames","arr","get","then","res","catnames","Object","values","data","map","kitty","name","unnestedNames","flat","spread","item","push","cat","catch","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBC,UAAAA,GAFiB,GAEX,EAFW;AAAA;AAAA;AAAA,2CAIfF,KAAK,CAACG,GAAN,CAAU,gEAAV,EACLC,IADK,CACA,UAAAC,GAAG,EAAI;AACZ,gBAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAlB,EACXC,GADW,CACP,UAAAL,GAAG;AAAA,qBAAIA,GAAG,CACbK,GADU,CACN,UAAAC,KAAK;AAAA,uBAAIA,KAAK,CAACC,IAAV;AAAA,eADC,CAAJ;AAAA,aADI,CAAf;AAGC,gBAAIC,aAAa,GAAGP,QAAQ,CAACQ,IAAT,EAApB;;AACA,gBAAIC,MAAM,sBAAOF,aAAP,CAAV;;AACAE,YAAAA,MAAM,CAACL,GAAP,CAAW,UAAAM,IAAI,EAAI;AAClBd,cAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,gBAAAA,GAAG,EAAEF;AAAN,eAAT;AACA,aAFD;AAGA,WAVI,EAWJG,KAXI,CAWE,UAACC,GAAD,EAAS;AACjBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAbM,CAJe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAqBflB,GArBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import axios from \"axios\";\n\nexport const getNames = async () => {\n\t\n\tconst arr = []\n\t\ttry {\n\t\t\tawait axios.get('https://bikeindex.org/api/v3/manufacturers?page=1&per_page=100')\n\t\t\t.then(res => {\n\t\t\t\tlet catnames = Object.values(res.data)\n\t\t\t\t\t\t\t.map(res => res\n\t\t\t\t\t\t\t\t.map(kitty => kitty.name))\n\t\t\t\t\tlet unnestedNames = catnames.flat()\n\t\t\t\t\tlet spread = [...unnestedNames]\n\t\t\t\t\tspread.map(item => {\n\t\t\t\t\t\tarr.push({cat: item})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\tconsole.log(err)\n\t\t})\n\t\t} catch (error) {\n\t\t\tthrow error\n\t\t}\n\t\treturn arr\n\t}"]},"metadata":{},"sourceType":"module"}