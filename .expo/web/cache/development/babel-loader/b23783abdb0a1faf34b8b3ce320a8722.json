{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport katsActionTypes from \"./kats.types\";\nvar INITIAL_STATE = {\n  katsList: [],\n  isUploading: false,\n  imagesDone: false\n};\n\nvar katsReducer = function katsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case katsActionTypes.RECEIVE_CATS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        katsList: action.payload,\n        isUploading: false\n      });\n\n    case katsActionTypes.REQUEST_CATS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isUploading: true\n      });\n\n    case katsActionTypes.FILTER_CATS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default katsReducer;","map":{"version":3,"sources":["/Users/Justas/Desktop/kats/redux/kats/kats.reducer.js"],"names":["katsActionTypes","INITIAL_STATE","katsList","isUploading","imagesDone","katsReducer","state","action","type","RECEIVE_CATS","payload","REQUEST_CATS","FILTER_CATS","count"],"mappings":";;;;;;AAAA,OAAOA,eAAP;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,WAAW,EAAE,KAFO;AAGpBC,EAAAA,UAAU,EAAE;AAHQ,CAAtB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAe,CAACS,YAArB;AACE,6CACKH,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACG,OAFnB;AAGEP,QAAAA,WAAW,EAAE;AAHf;;AAKA,SAAKH,eAAe,CAACW,YAArB;AACA,6CACKL,KADL;AAEEH,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKH,eAAe,CAACY,WAArB;AACE,6CACGN,KADH;AAEAO,QAAAA,KAAK,EAAEN,MAAM,CAACG;AAFd;;AAIF;AACE,aAAOJ,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import katsActionTypes from './kats.types';\n\nconst INITIAL_STATE = {\n  katsList: [],\n  isUploading: false,\n  imagesDone: false\n};\n\nconst katsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case katsActionTypes.RECEIVE_CATS:\n      return {\n        ...state,\n        katsList: action.payload,\n        isUploading: false\n      };\n      case katsActionTypes.REQUEST_CATS:\n      return {\n        ...state,\n        isUploading: true\n      };\n    case katsActionTypes.FILTER_CATS:\n      return {\n      ...state,\n      count: action.payload\n    }\n    default:\n      return state;\n  }\n};\n\nexport default katsReducer;\n"]},"metadata":{},"sourceType":"module"}